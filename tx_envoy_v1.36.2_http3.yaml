static_resources:
  listeners:
  # ==================== 443 Port TCP Listener (HTTP/1.1, HTTP/2) ====================
  - name: listener_https_tcp_443
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
        protocol: TCP
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filter_chain_match:
        server_names: ["www.qsgl.net", "tx.qsgl.net", "*.qsgl.net", "qsgl.net"]
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            alpn_protocols: ["h2", "http/1.1"]
            tls_certificates:
            - certificate_chain:
                filename: "/opt/certs/qsgl.net.fullchain.crt"
              private_key:
                filename: "/opt/certs/qsgl.net.key"
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https_qsgl_net_443
          codec_type: AUTO
          route_config:
            name: local_route_qsgl_net_443
            virtual_hosts:
            - name: backend_qsgl_net_443
              domains: ["www.qsgl.net", "tx.qsgl.net", "*.qsgl.net", "qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_https_cluster_443
                  host_rewrite_literal: "www.qsgl.net"
                  timeout: 30s
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
                allow_headers: "Content-Type, Authorization, X-Requested-With, Accept, Origin, Access-Control-Request-Method, Access-Control-Request-Headers"
                expose_headers: "Content-Length, Content-Range, X-Total-Count"
                max_age: "86400"
                allow_credentials: true
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  # ==================== 443 Port UDP Listener (HTTP/3 QUIC) ====================
  - name: listener_quic_443
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
        protocol: UDP
    udp_listener_config:
      quic_options: {}
      downstream_socket_config:
        prefer_gro: true
    filter_chains:
    - filter_chain_match:
        server_names: ["www.qsgl.net", "tx.qsgl.net", "*.qsgl.net", "qsgl.net"]
      transport_socket:
        name: envoy.transport_sockets.quic
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.quic.v3.QuicDownstreamTransport
          downstream_tls_context:
            common_tls_context:
              alpn_protocols: ["h3"]
              tls_certificates:
              - certificate_chain:
                  filename: "/opt/certs/qsgl.net.fullchain.crt"
                private_key:
                  filename: "/opt/certs/qsgl.net.key"
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http3_qsgl_net_443
          codec_type: HTTP3
          route_config:
            name: local_route_http3_qsgl_net_443
            virtual_hosts:
            - name: backend_http3_qsgl_net_443
              domains: ["www.qsgl.net", "tx.qsgl.net", "*.qsgl.net", "qsgl.net"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: backend_https_cluster_443
                  host_rewrite_literal: "www.qsgl.net"
                  timeout: 30s
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
                allow_headers: "Content-Type, Authorization, X-Requested-With, Accept, Origin, Access-Control-Request-Method, Access-Control-Request-Headers"
                expose_headers: "Content-Length, Content-Range, X-Total-Count"
                max_age: "86400"
                allow_credentials: true
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          http3_protocol_options:
            allow_extended_connect: true

  # ==================== 5002 Port TCP Listener ====================
  - name: listener_https_tcp_5002
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 5002
        protocol: TCP
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filter_chain_match:
        server_names: ["www.qsgl.net", "tx.qsgl.net", "*.qsgl.net", "qsgl.net"]
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            alpn_protocols: ["h2", "http/1.1"]
            tls_certificates:
            - certificate_chain:
                filename: "/opt/certs/qsgl.net.fullchain.crt"
              private_key:
                filename: "/opt/certs/qsgl.net.key"
      filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_https_qsgl_net_5002
          codec_type: AUTO
          stream_idle_timeout: 3600s
          request_timeout: 0s
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: /dev/stdout
              log_format:
                text_format_source:
                  inline_string: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%UPSTREAM_HOST%\" \"%UPSTREAM_CLUSTER%\"\n"
          route_config:
            name: local_route_qsgl_net_5002
            virtual_hosts:
            - name: backend_qsgl_net_5002
              domains: ["www.qsgl.net", "www.qsgl.net:5002", "tx.qsgl.net", "tx.qsgl.net:5002", "*.qsgl.net", "*.qsgl.net:5002", "qsgl.net", "qsgl.net:5002"]
              routes:
              - match:
                  prefix: "/sse/"
                route:
                  cluster: backend_https_cluster_5002
                  host_rewrite_literal: "www.qsgl.net"
                  timeout: 0s
                  idle_timeout: 3600s
              - match:
                  prefix: "/"
                route:
                  cluster: backend_https_cluster_5002
                  host_rewrite_literal: "www.qsgl.net"
                  timeout: 30s
              cors:
                allow_origin_string_match:
                - safe_regex:
                    regex: ".*"
                allow_methods: "GET, POST, PUT, DELETE, OPTIONS, PATCH"
                allow_headers: "Content-Type, Authorization, X-Requested-With, Accept, Origin, Access-Control-Request-Method, Access-Control-Request-Headers"
                expose_headers: "Content-Length, Content-Range, X-Total-Count"
                max_age: "86400"
                allow_credentials: true
          http_filters:
          - name: envoy.filters.http.cors
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
          - name: envoy.filters.http.grpc_web
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  # ==================== Backend Clusters ====================
  clusters:
  # 443 Port Backend Cluster
  - name: backend_https_cluster_443
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: backend_https_cluster_443
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 61.163.200.245
                port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: www.qsgl.net

  # 5002 Port Backend Cluster
  - name: backend_https_cluster_5002
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
    load_assignment:
      cluster_name: backend_https_cluster_5002
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 61.163.200.245
                port_value: 5002
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: www.qsgl.net

# Admin Interface
admin:
  address:
    socket_address:
      address: 127.0.0.1
      port_value: 9901
